{
    "link_type": "dedupe_only",
    "blocking_rules_to_generate_predictions": [
        {
            "blocking_rule": "(l.\"first_name\" = r.\"first_name\") AND (l.\"surname\" = r.\"surname\")",
            "sql_dialect": "duckdb"
        },
        {
            "blocking_rule": "(l.\"surname\" = r.\"surname\") AND (l.\"dob\" = r.\"dob\")",
            "sql_dialect": "duckdb"
        },
        {
            "blocking_rule": "(l.\"first_name\" = r.\"first_name\") AND (l.\"dob\" = r.\"dob\")",
            "sql_dialect": "duckdb"
        },
        {
            "blocking_rule": "(l.\"postcode_fake\" = r.\"postcode_fake\") AND (l.\"first_name\" = r.\"first_name\")",
            "sql_dialect": "duckdb"
        }
    ],
    "comparisons": [
        {
            "output_column_name": "first_name",
            "comparison_levels": [
                {
                    "sql_condition": "\"first_name_l\" IS NULL OR \"first_name_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"first_name_l\" = \"first_name_r\"",
                    "label_for_charts": "Exact match first_name",
                    "m_probability": 0.5441309704828743,
                    "u_probability": 0.012224508462954514,
                    "tf_adjustment_column": "first_name",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "damerau_levenshtein(\"first_name_l\", \"first_name_r\") <= 1",
                    "label_for_charts": "Damerau_levenshtein <= 1",
                    "m_probability": 0.08597202475282924,
                    "u_probability": 0.002895025362570828
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"first_name_l\", \"first_name_r\") >= 0.9",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.9",
                    "m_probability": 0.036910574203147924,
                    "u_probability": 0.002137531421674203
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"first_name_l\", \"first_name_r\") >= 0.8",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.8",
                    "m_probability": 0.08947871678465857,
                    "u_probability": 0.004985060274390353
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.24350771377649003,
                    "u_probability": 0.9777578744784101
                }
            ],
            "comparison_description": "Exact match vs. First_Name within levenshtein threshold 1 vs. First_Name within damerau-levenshtein threshold 1 vs. First_Name within jaro_winkler thresholds 0.9, 0.8 vs. anything else"
        },
        {
            "output_column_name": "surname",
            "comparison_levels": [
                {
                    "sql_condition": "\"surname_l\" IS NULL OR \"surname_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"surname_l\" = \"surname_r\"",
                    "label_for_charts": "Exact match surname",
                    "m_probability": 0.7702354573591275,
                    "u_probability": 0.000650928449422447,
                    "tf_adjustment_column": "surname",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "damerau_levenshtein(\"surname_l\", \"surname_r\") <= 1",
                    "label_for_charts": "Damerau_levenshtein <= 1",
                    "m_probability": 0.12636442095622685,
                    "u_probability": 0.0003716318004094365
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"surname_l\", \"surname_r\") >= 0.9",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.9",
                    "m_probability": 0.010494933613633142,
                    "u_probability": 0.0002797548879777571
                },
                {
                    "sql_condition": "jaro_winkler_similarity(\"surname_l\", \"surname_r\") >= 0.8",
                    "label_for_charts": "Jaro_winkler_similarity >= 0.8",
                    "m_probability": 0.014385423969344663,
                    "u_probability": 0.0030090261620080946
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.07851976410166804,
                    "u_probability": 0.9956886587001823
                }
            ],
            "comparison_description": "Exact match vs. Surname within levenshtein threshold 1 vs. Surname within damerau-levenshtein threshold 1 vs. Surname within jaro_winkler thresholds 0.9, 0.8 vs. anything else"
        },
        {
            "output_column_name": "dob",
            "comparison_levels": [
                {
                    "sql_condition": "\n        try_strptime(\"dob_l\", '%Y-%m-%d')\n     IS NULL OR \n        try_strptime(\"dob_r\", '%Y-%m-%d')\n     IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"dob_l\" = \"dob_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.6879913183078774,
                    "u_probability": 0.0024273489114530217
                },
                {
                    "sql_condition": "damerau_levenshtein(\"dob_l\", \"dob_r\") <= 1",
                    "label_for_charts": "Damerau_levenshtein <= 1",
                    "m_probability": 0.27639408965983203,
                    "u_probability": 0.025766860284662796
                },
                {
                    "sql_condition": "\n            abs(date_diff('month',\n                strptime(\"dob_l\", '%Y-%m-%d'),\n                strptime(\"dob_r\", '%Y-%m-%d'))\n                ) <= 1\n        ",
                    "label_for_charts": "Within 1 month",
                    "m_probability": 0.0031756211995425145,
                    "u_probability": 0.0037749301645013966
                },
                {
                    "sql_condition": "\n            abs(date_diff('year',\n                strptime(\"dob_l\", '%Y-%m-%d'),\n                strptime(\"dob_r\", '%Y-%m-%d'))\n                ) <= 1\n        ",
                    "label_for_charts": "Within 1 year",
                    "m_probability": 0.007451940207640657,
                    "u_probability": 0.046537844189243116
                },
                {
                    "sql_condition": "\n            abs(date_diff('year',\n                strptime(\"dob_l\", '%Y-%m-%d'),\n                strptime(\"dob_r\", '%Y-%m-%d'))\n                ) <= 10\n        ",
                    "label_for_charts": "Within 10 years",
                    "m_probability": 0.016859886889761786,
                    "u_probability": 0.22140167605196648
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.008127143735345621,
                    "u_probability": 0.7000913403981732
                }
            ],
            "comparison_description": "Exact match vs. Dob within damerau-levenshtein threshold 1 vs. Dates within the following thresholds Month(s): 1, Year(s): 1, Year(s): 10 vs. anything else"
        },
        {
            "output_column_name": "postcode_fake",
            "comparison_levels": [
                {
                    "sql_condition": "\"postcode_fake_l\" IS NULL OR \"postcode_fake_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "lower(\"postcode_fake_l\") = lower(\"postcode_fake_r\")",
                    "label_for_charts": "Exact match postcode_fake",
                    "m_probability": 0.6786618521290907,
                    "u_probability": 0.00014099506799252162
                },
                {
                    "sql_condition": "\n        regexp_extract(lower(\"postcode_fake_l\"), '^[A-Za-z]{1,2}[0-9][A-Za-z0-9]? [0-9]')\n     = \n        regexp_extract(lower(\"postcode_fake_r\"), '^[A-Za-z]{1,2}[0-9][A-Za-z0-9]? [0-9]')\n    ",
                    "label_for_charts": "Exact match Postcode Sector",
                    "m_probability": 0.09454214756974498,
                    "u_probability": 0.00039541283512569396
                },
                {
                    "sql_condition": "\n        regexp_extract(lower(\"postcode_fake_l\"), '^[A-Za-z]{1,2}[0-9][A-Za-z0-9]?')\n     = \n        regexp_extract(lower(\"postcode_fake_r\"), '^[A-Za-z]{1,2}[0-9][A-Za-z0-9]?')\n    ",
                    "label_for_charts": "Exact match Postcode District",
                    "m_probability": 0.04245024745889525,
                    "u_probability": 0.0004890962247473917
                },
                {
                    "sql_condition": "\n        regexp_extract(lower(\"postcode_fake_l\"), '^[A-Za-z]{1,2}')\n     = \n        regexp_extract(lower(\"postcode_fake_r\"), '^[A-Za-z]{1,2}')\n    ",
                    "label_for_charts": "Exact match Postcode Area",
                    "m_probability": 0.09818471400853485,
                    "u_probability": 0.010970356256938133
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.08616103883373426,
                    "u_probability": 0.9880041396151963
                }
            ],
            "comparison_description": "Exact match on full postcode vs. exact match on sector vs. exact match on district vs. exact match on area vs. all other comparisons"
        },
        {
            "output_column_name": "birth_place",
            "comparison_levels": [
                {
                    "sql_condition": "\"birth_place_l\" IS NULL OR \"birth_place_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"birth_place_l\" = \"birth_place_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.8411885596523894,
                    "u_probability": 0.004255555132464759,
                    "tf_adjustment_column": "birth_place",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.1588114403476107,
                    "u_probability": 0.9957444448675352
                }
            ],
            "comparison_description": "Exact match vs. anything else"
        },
        {
            "output_column_name": "occupation",
            "comparison_levels": [
                {
                    "sql_condition": "\"occupation_l\" IS NULL OR \"occupation_r\" IS NULL",
                    "label_for_charts": "Null",
                    "is_null_level": true
                },
                {
                    "sql_condition": "\"occupation_l\" = \"occupation_r\"",
                    "label_for_charts": "Exact match",
                    "m_probability": 0.8964431408109956,
                    "u_probability": 0.04052388472636166,
                    "tf_adjustment_column": "occupation",
                    "tf_adjustment_weight": 1.0
                },
                {
                    "sql_condition": "ELSE",
                    "label_for_charts": "All other comparisons",
                    "m_probability": 0.10355685918900442,
                    "u_probability": 0.9594761152736383
                }
            ],
            "comparison_description": "Exact match vs. anything else"
        }
    ],
    "retain_matching_columns": true,
    "retain_intermediate_calculation_columns": true,
    "max_iterations": 10,
    "em_convergence": 0.01,
    "sql_dialect": "duckdb",
    "linker_uid": "p47ggjq1",
    "probability_two_random_records_match": 0.00013582694460587586
}